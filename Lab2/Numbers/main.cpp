// Решаем простые математические задачи

#include <iostream>

using namespace std;

int main()
{



//ввод и арифмитические операции
   /* int a,b;
    cout << "enter a and b:  "; cin >> a >> b;
    cout << a << " + " << b << " = " << a + b << endl;
    */





//задача про самолет
/*    int S, t, g = 10;

    cout << "t = "; cin >> t;
    int v = g*t;
    int vm= v/2;
    cout << "S" << " = " << vm*t << " m" << endl;
*/





//деление с округлением вверх

/*    int a,b;

    cin >> a >> b;
    cout << a << " / " << b << " = " << (a + b - 1) / b << endl;
*/




// делим орехи между белками
// N белочек нашли K орешков и решили разделить их поровну. Определите, сколько орешков достанется каждой белочке.

/*int n, k;

cin >> n >> k;
cout << k / n;
*/





/*Последняя цифра
Дано натуральное число, выведите его последнюю цифру.
*/

/*    int a;

    cout << "a = " ; cin >> a;

   cout << "last digit of a: " << a%10 << endl;
*/




/*Число десятков

Дано целое неотрицательное число N, определите число десятков в нем (предпоследнюю цифру числа).
 Если предпоследней цифры нет, то можно считать, что число десятков равно нулю.
*/

/*    int a;

    cin >> a;
    cout << a % 100 /10;
*/




// Дано целое трехзначное число. Найдите сумму его цифр.

/*    int a,b,c,d;

    cin >> a;

    b = a % 10; // число едениц
    c = a % 100 /10; // число десятков
    d = a / 100; // число сотен

    cout << b+c+d;
*/

// Следующее четное
// На вход дается натуральное число N. Выведите следующее за ним четное число

/*    int a;

    cin >> a;

    int b;

    if (a % 2 == 0) b = a + 2;
    else b = a + 1;

    cout << b;
*/



// Парты

/*
В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для них новыми партами.
За каждой партой может сидеть два учащихся. Известно количество учащихся в каждом из трех классов.
Выведите наименьшее число парт, которое нужно приобрести для них. Каждый класс сидит в своем кабинете.

Формат входных данных

Программа получает на вход три целых неотрицательных числа: количество учащихся в каждом из трех классов (числа не превышают 1000).
*/


/*    int x,y,z; // число учащихся

    cin >> x >> y >> z;
    cout << (x / 2+ x % 2) + (y / 2+ y % 2) + (z / 2+ z % 2);
*/






/*
Покупка пирожков
Пирожок в столовой стоит A рублей и B копеек. Определите, сколько рублей и копеек нужно заплатить за N пирожков.
Формат входных данных
Программа получает на вход три числа: A, B, N - целые, положительные, не превышают 10000
*/

/*
    int a, b, n;

    cin >> a >> b >> n;

    int rub = a * n + b * n / 100; // число рублей с учетом коп.
    int kop = b * n % 100; // число коп.  с учетом рублей

    cout << rub << " " << kop;
*/

/*
Электронные часы
Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59), то есть сначала записывается количество часов, потом обязательно двузначное количество минут, затем обязательно двузначное количество секунд. Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
С начала суток прошло N секунд. Выведите, что покажут часы.
Формат входных данных
На вход дается натурально число N, не превосходящее 10e7 (10000000).
*/

/*
    int n; // число секунд

    cin >> n;

    int h = n / 3600; // число часов
    int m = (n - (h * 3600) ) / 60; // число минут
    int s = n - h * 3600 - m * 60; // чмсло секунд

    cout << h % 24 << ":"; // число часов с учетом суток
    cout << m / 10 << m % 10 << ":";
    cout << s / 10 << s % 10;
*/

/*
Разность времен
Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды для каждого из моментов времени. Известно, что второй момент времени наступил не раньше первого. Определите, сколько секунд прошло между двумя моментами времени.
Формат входных данных
Программа на вход получает три целых числа: часы, минуты, секунды, задающие первый момент времени и три целых числа, задающих второй момент времени.
Формат выходных данных
Выведите число секунд между этими моментами времени.
*/
/*

    int a, b, c; // hh:mm:ss первое событие
    int x, y, z; // hh:mm:ss второе событие

    cin >> a >> b >> c;
    cin >> x >> y >> z;

    int n1 = a * 3600 + b * 60 + c; // число секунд первого события
    int n2 = x * 3600 + y * 60 + z; // число секунд второго события

    cout << n2 - n1;
*/


/*
МКАД
Длина Московской кольцевой автомобильной дороги —109 километров.
Байкер Вася стартует с нулевого километра МКАД и едет со скоростью V километров в час.
На какой отметке он остановится через T часов?
Формат входных данных
Программа получает на вход целые числа V и T.
Если V > 0, то Вася движется в положительном направлении по МКАД, если же значение V < 0, то в отрицательном. 0 =< T <= 1000, -1000 <= V <= 1000
Формат выходных данных
Программа должна вывести целое число от 0 до 108 — номер отметки, на которой остановится Вася.
*/

/*
    int v, t, s;
    int lenght = 109;


    cin >> v >> t;

    s = (v * t % lenght + lenght) % lenght;

    cout << s;
*/





/*
Симметричное число
Дано четырехзначное число. Определите, является ли его десятичная запись симметричной. Если число симметричное, то выведите 1, иначе выведите любое другое целое число. Число может иметь меньше четырех знаков, тогда нужно считать, что его десятичная запись дополняется слева незначащими нулями.
Формат входных данных
Вводится единственное число.
Формат выходных данных
Выведите одно целое число - ответ на задачу.

Sample Input 1:
2002
Sample Output 1:
1
Sample Input 2:
2008
Sample Output 2:
37
*/

/*
    int n; // вводимое число
    int a1, a2, a3; // младшая, старшая половина числа, перевернутая младшая

    cin >> n;

    a1 = n % 100; // младшая половина числа
    a2 = n / 100; // старшая половина числа

    a3 = a1 % 10 * 10 + a1/10; // меняем местами цифры

    cout << (a2-a3) + 1;
*/




/*
Улитка
Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров. На какой день улитка доползет до вершины шеста?
Формат входных данных
Программа получает на вход целые неотрицательные числа H, A, B, причем H > B. Числа не превосходят 100.
Формат выходных данных
Программа должна вывести одно натуральное число. Гарантируется, что A > B.

Sample Input:

10
3
2
Sample Output:
8

Задача может показаться школьной, но её непросто решить.
Для тех, у кого не получается и терпение скоро закончится, напомню: время = путь / скорость.
Но сложность в том, что нужно учесть два момента:
1. Делить путь на скорость нужно с округлением вверх (по умолчанию числа делятся с округлением вниз).
Например, если нужно разделить a на b + c  с округлением вверх, то нужно записать так: a + (b + c) - 1 / (b + c)
2. В условии задачи спрашивается: "На какой день улитка доползет до вершины шеста?", то есть последнюю ночь не
нужно учитывать в расчётах. Таким образом, на последнем шаге улитка только проползёт вверх, вниз ей уже не нужно спускаться.
Следовательно, Вам нужно из общего пути вычесть путь пройденный за последний день и добавить этот день к общему времени.
PS: просто обобщённые подсказки из комментариев (ИМХО: без них задачу решило менее 1% слушателей курса, остальные списали).

*/

    int h, a, b;

    //cout << 10 % 100;
    cin >> h >> a >> b;

    cout << ( (h - a) + (a - b - 1) ) / (a - b) + 1;

    return 0;
 }





