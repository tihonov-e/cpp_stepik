//Решаем задачи на цикл while

#include <iostream>

using namespace std;

int main()
{

//1. По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.
//Формат входных данных
//Вводится натуральное число.
//Формат выходных данных
//Выведите ответ на задачу.
//Sample Input:
//50
//Sample Output:
//1 4 9 16 25 36 49

//    int n, i = 1;
//
//    cin >> n;
//
//    while (i * i <= n) {
//
//        cout << i * i << " ";
//        i++;
//    }






//2. Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
//Формат входных данных
//Вводится целое положительное число.
//Формат выходных данных
//Выведите ответ на задачу.
//Sample Input:
//15
//Sample Output:
//3

//    int n, i = 2,
//
//    cin >> n;
//    int min_= n;
//
//    while (i < n) {
//
//        if (n % i == 0 && i <= min_) {
//                min_ = i;
//                i = n;
//        }
//        i++;
//   }

//       cout << min_;







//3. По данному числу N распечатайте все целые степени двойки, не превосходящие N, в порядке возрастания.
//
//Формат входных данных
//Вводится натуральное число.
//
//Формат выходных данных
//Выведите ответ на задачу.
//
//Sample Input:
//
//50
//Sample Output:
//
//1 2 4 8 16 32

//    int n, a = 1;
//
//
//    cin >> n;
//
//    while (a <= n) {
//
//        cout << a << " ";
//        a *= 2; // результат возведения 2 в степень
//    }




//4. Дано натуральное число N. Выведите слово YES,
//если число N является точной степенью двойки,
//или слово NO в противном случае.
//
//Формат входных данных
//Вводится натуральное число.
//Формат выходных данных
//Выведите ответ на задачу.
//Sample Input 1:
//
//1
//Sample Output 1:
//
//YES
//Sample Input 2:
//
//2
//Sample Output 2:
//
//YES


//    int n, i = 1, a = 1;
//
//    cin >> n;
//
//    while (a <= n) {
//
//        a *= 2; // возводим 2 в степень step by step
//
//    }
//
//    cout << a/2 << endl;    // убираем одну лишнюю стпень после while
//
//    if (a/2 == n) cout << "YES";
//    else cout << "NO";






//5. Программа получает на вход последовательность целых
//неотрицательных чисел, каждое число записано в отдельной строке.
// Последовательность завершается числом 0, при считывании которого
// программа должна закончить свою работу и вывести количество членов
// последовательности (не считая завершающего числа 0).
//Числа, следующие за числом 0, считывать не нужно.
//
//Формат входных данных
//Вводится последовательность целых чисел, заканчивающаяся числом 0.
//Формат выходных данных
//Выведите ответ на задачу.
//Sample Input:
//
//1
//7
//9
//0
//5
//Sample Output:
//
//3

//    int n, i = 0;
//
//    cin >> n;
//
//    while (n != 0) {
//        i++;
//        cin >> n;
//    }
//
//    cout << i;





//6. Определите сумму всех элементов последовательности, завершающейся числом 0.
//
//Формат входных данных
//Вводится последовательность целых чисел, оканчивающаяся числом 0
//(само число 0 в последовательность не входит, а служит как признак ее окончания.
//Формат выходных данных
//Выведите ответ на задачу.
//Sample Input:
//
//3
//6
//8
//0
//Sample Output:
//
//17


//    int n, sum = 0;
//
//    cin >> n;
//
//    while (n !=0 ) {
//        sum += n;
//        cin >> n;
//    }
//
//    cout << sum;






//7. Последовательность состоит из натуральных чисел и завершается числом 0.
//Определите значение наибольшего элемента последовательности.
//
//Формат входных данных
//Вводится последовательность целых чисел, оканчивающаяся числом 0
//(само число 0 в последовательность не входит, а служит как признак ее окончания).
//Формат выходных данных
//Выведите ответ на задачу.
//Sample Input:
//
//1
//7
//9
//0
//Sample Output:
//
//9
//
//    int n, max_value = 0;
//
//    cin >> n;
//
//    while (n != 0) {
//        if (n > max_value) max_value = n;
//        cin >> n;
//    }
//
//    cout << max_value;





//8. Последовательность состоит из натуральных чисел и завершается числом 0.
//Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу.
//
//Формат входных данных
//Вводится непустая последовательность целых чисел, оканчивающаяся числом 0
//(само число 0 в последовательность не входит, а служит как признак ее окончания).
//Формат выходных данных
//Выведите ответ на задачу.
//Sample Input 1:
//1
//7
//9
//0
//Sample Output 1:
//1
//Sample Input 2:
//1
//3
//3
//1
//0
//Sample Output 2:
//2

//     int n, i = 1, max_value = 0;
//
//     cin >> n;
//
//
//     while (n != 0) {
//        if (n > max_value) {        // найдем макс. элемент
//
//            max_value = n;
//            i = 1;          //сброс счетчика кол-ва одинаковыъ max чисел
//        }
//            cin >> n;
//
//        if (n != 0 && n == max_value) i++; //сравнение с максимальным
//
//     }
//
//    cout << i;


    return 0;
}
